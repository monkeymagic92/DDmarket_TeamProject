<?xml version="1.0" encoding="UTF-8"?>
<!--  mapper 하려면 DOCTYPE에 mapper 부분으로 입력해줘야됨 (마이바티스 xml이랑 비교해서 보기) -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!-- 마이바티스 사용하려면 무조건 상단에 박아둬야하는  DOCTYPE-->
<mapper namespace="com.dandi.ddmarket.user.UserMapper">
		
							<!-- select -->
							
	<!-- n번 회원 상세정보 -->							
	<select id="selUser" parameterType="UserPARAM" resultType="UserDMI"> 
		SELECT i_user, user_id, user_pw, salt, nm, nick, email, post, addr, road, joinPass,
		profile_img, r_dt, m_dt, grade
		FROM t_user
		WHERE <if test="i_user > 0"> i_user = #{i_user}</if>
		<if test="user_id != null and user_id != ''"> user_id = #{user_id}</if>
	</select>
	
	
	<!-- 마이페이지 가기위한 selUser 값   (selUser 메소드에서 where절 뺏음) -->							
	<select id="selDetailUser" parameterType="UserPARAM" resultType="UserDMI"> 
		SELECT i_user, user_id, user_pw, salt, nm, nick, email, post, addr, road, joinPass,
		profile_img, r_dt, m_dt, grade
		FROM t_user
		WHERE <if test="i_user > 0"> i_user = #{i_user}</if>
	</select>
	
	
	<!-- 비밀번호 찾기 -->
	<select id="findPwChk" parameterType="UserPARAM" resultType="UserDMI">
		SELECT i_user, user_id, user_pw, salt, email FROM t_user
		WHERE user_id = #{user_id}
	</select>

	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="UserPARAM" resultType="UserDMI">
		SELECT user_id FROM t_user
		WHERE email = #{email}
	</select>
	
	<!-- 이메일 중복체크 (ajax) -->
	<select id="emailChk" parameterType="UserPARAM" resultType="UserDMI">
		SELECT email FROM t_user		
		WHERE email = #{email}
	</select>
	
	<!-- 닉네임 중복체크 (ajax) -->
	<select id="nickChk" parameterType="UserPARAM" resultType="UserDMI">
		SELECT nick FROM t_user		
		WHERE nick = #{nick}
	</select>
	
	<select id="selCategory" resultType="CategoryVO">
		SELECT i_cg, cg_nm FROM t_category
	</select>
	
	<!-- myPage 탭메뉴 리스트 불러오기 -->
	<select id="selTapList" parameterType="TapVO" resultType="TapVO">
		SELECT i_tap, tap_nm FROM t_tap
	</select>
	
	<!-- 판매갯수(글갯수) -->
	<select id="selSellCnt" parameterType="UserPARAM" resultType="Integer">
		SELECT COUNT(*) FROM t_board
		WHERE i_user = #{i_user}
	</select>
	
	<!-- 판매글 리스트 -->
	<select id="selSellList" parameterType="BoardPARAM" resultType="BoardPARAM">
		SELECT A.i_board, A.thumImage, A.title, A.price, A.r_dt, SUBSTRING_INDEX(A.addr," ",3) AS addr
		FROM t_board A
		WHERE i_user = #{i_user}
		ORDER BY A.r_dt DESC
		LIMIT #{pageStart}, #{perPageNum}
	</select>
	
							<!-- insert -->
						 
	<!-- 회원가입 -->
	<insert id="joinUser" parameterType="UserVO">
		INSERT INTO t_user
		(user_id, user_pw, salt, nm, nick, uNum, email, post, addr, road, joinPass)
		VALUES
		(#{user_id}, #{user_pw}, #{salt}, #{nm}, #{nick}, #{uNum}, #{email}, #{post}, #{addr}, #{road}, #{joinPass})
	</insert>		
						
							<!-- update -->
				
		
	<!-- 비밀번호 변경 -->							
	<update id="changePw" parameterType="UserPARAM">
		UPDATE t_user
		SET user_pw = #{user_pw}
		,salt = #{salt}
		WHERE i_user = #{i_user}		
	</update>
	
	<!-- 닉네임 변경 -->
	<update id="changeNick" parameterType="UserPARAM">
		UPDATE t_user
		SET nick = #{nick}		
		WHERE i_user = #{i_user}
	</update>
	
	<!-- 주소 변경 -->
	<update id="changeAddr" parameterType="UserPARAM">
		UPDATE t_user
		SET post = #{post}
		,addr = #{addr}
		,road = #{road}
		WHERE i_user = #{i_user}
	</update>
	
	<!-- 이메일 변경 -->
	<update id="changeEmail" parameterType="UserPARAM">
		UPDATE t_user
		SET email = #{email}
		WHERE i_user = #{i_user}
	</update>
	
	<!-- 프로필 사진 수정 / 등록 -->
	<update id="insProfile_img" parameterType="UserVO">
		UPDATE t_user
		SET profile_img = #{profile_img}
		WHERE i_user = #{i_user}
	</update>
	
	<!-- 관심사 수정 / 등록 -->
	<update id="changeCategory" parameterType="UserPARAM">
		UPDATE t_user
		SET favI_cg_1 = #{favI_cg_1}
		WHERE i_user = #{i_user}
	</update>
	
	<update id="delImg" parameterType="int">
		UPDATE t_user
		SET profile_img = NULL
		WHERE i_user = #{i_user}
	</update>
	
	
	<!-- 디테일페이지 좋아요 추가 -->
	<insert id="insboardLike" parameterType="UserPARAM">
		INSERT INTO t_board_like
		(i_user, i_board)
		VALUES
		(#{i_user}, #{i_board})
	</insert>

							<!-- delete -->
	
	<delete id="delProfile_img" parameterType="UserPARAM">
		DELETE FROM t_user
		WHERE profile_img = #{profile_img}
	</delete>
		
	<!-- 디테일페이지 좋아요 제거 -->
	<delete id="delboardLike" parameterType="UserPARAM">
		DELETE FROM t_board_like
		WHERE i_board = #{i_board}
		AND i_user = #{i_user}
	</delete>
	
</mapper>